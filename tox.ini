[tox]
skip_missing_interpreters = true
envlist = py{27,33,34}-django{18}-{postgres,mysql,sqlite},
          py{27,34,35}-django{19,110}-{postgres,mysql,sqlite}

[testenv]
deps=
  coverage
  django18: Django>=1.8,<1.9
  django19: Django>=1.9,<1.10
  django110: Django>=1.10,<1.11
  djangotrunk: git+https://github.com/django/django.git
  postgres: psycopg2
  mysql: mysqlclient
setenv=
  DB_NAME={envname}
  DB_USER=
  DB_PASSWORD=
  mysql: DB_USER={env:MYSQL_USER:root}
  mysql: DB_PASSWORD={env:MYSQL_PASSWORD:}
  postgres: DB_ENGINE=postgresql_psycopg2
  sqlite: DB_ENGINE=sqlite3
  mysql: DB_ENGINE=mysql
commands=
  postgres: createdb jsonfield-{envname}
  mysql: mysqladmin --user={env:MYSQL_USER:root} --password={env:MYSQL_PASSWORD:} create jsonfield-{envname}
  coverage run --branch --parallel-mode --source jsonfield setup.py test
  postgres: dropdb jsonfield-{envname}
  mysql: mysqladmin --user={env:MYSQL_USER:root} --password={env:MYSQL_PASSWORD:} --force drop jsonfield-{envname}
whitelist_externals=
  mysqladmin
  createdb
  dropdb

[testenv:flake8]
deps=
  flake8
commands=
  flake8 jsonfield

[testenv:status]
deps=
  coverage
  git+https://github.com/schinckel/python-coveralls@mercurial-support
commands=
  coverage combine
  coverage report
  coveralls
passenv=
  COVERALLS_REPO_TOKEN
